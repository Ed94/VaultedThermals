/** 
@file VT_Vaults.hpp

@brief Vaulted Thermals: Vault Definitions

@details

Vaults (Designator):
MagmaChamber
V0
V1
V2
V3
V4
V5
V6


Important: Higher numbered vaults may require a lower level vault to be opened. 
If the vault is not open, it will define the open definition itself implicitly.

Opening the MagmaChamber vault is unique int that it affects all other vaults.
When opened, the definition will change the loader interfaced with for all the implementation
in the other vaults to the loader generated by the MagmaChamber vault.
Define macro: VT_Vault_MagmaChamber_Open if you want this. [Note: Currently not implemented]

Note: Vaults 3 and 7 must be opened before use (see macro definitions for opening). 
This is due to their implementation making use of static or dynamic object allocations. 
If the vaults are not properly opened all that will exist within them is a namespace called: Vault_Closed.

Vault 3 Open Macro: #define VT_Vault_3_Open
Vault 6 Open Macro: #define VT_Vault_6_Open

If VT_Option__Use_Short_Namespace is defined, short vault namespace will be used.
Short namespace: V#, where # is the vault number. (Exception: Corridors, Vault_MagmaChamber)
*/



#pragma once



#ifdef VT_Option__Use_Long_Namespace
namespace VaultedThermals
#else
namespace VT
#endif
{
	/** @namespace Corridors

		@brief Contains shared definitions between the vaults.
	*/
	namespace Corridors {}

	/** @namespace Vault_MagmaChamber

		@todo Look into possibly implementing with the Volk library.

		@brief Meta-Loading Setup.

		@details When the heat at the control gate isn't enough. 
	*/
	namespace Vault_MagmaChamber {}

	/** @namespace Vault_0

		@brief Backend vault for VaultedThermals

		@details For now only abstracts away OS Platform details and basic meta-structure definitions.
	*/
	namespace V0 { using namespace Corridors; }

	/** @namespace Vault_1
	*
	*	@brief 1:1 Wrapping of Vulkan API
	*/
	namespace V1 { using namespace Corridors; }

	/** @namespace Vault_2

		@brief Repetitive functionality wrapping.
	*/
	namespace V2 { using namespace Corridors; }

	/** @namespace Vault_3

		@brief Object-Oriented wrapping
	*/
	namespace V3 { using namespace Corridors; }

	/** @namespace Vault_4
		
		@brief Object-Oriented bootstrapped backend
	*/
	namespace V4 { using namespace Corridors; }
}
